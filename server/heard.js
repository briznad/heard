// Generated by CoffeeScript 1.7.1
(function() {
  var app, conn, cradle, db, express, init, initRoutes, routeHandlers, routes, settings, _;

  console.log('\nHeard API server is warming up...\n');


  /*
   load general depencies / global vars
   */

  settings = {
    mode: 'DEV',
    httpPort: 4327
  };

  _ = require('underscore');

  cradle = require('cradle');

  express = require('express');

  app = express();

  conn = new cradle.Connection('127.0.0.1', 5984, {
    secure: false,
    auth: {
      username: 'heard',
      password: 'heardpass'
    }
  });

  db = conn.database('heard');

  init = function() {
    app.use(express.bodyParser());
    app.use(express.cookieParser());
    initRoutes();
    app.listen(settings.httpPort);
    console.info('\nserver started at http://127.0.0.1:' + settings.httpPort);
    if (settings.mode === 'PROD') {
      console.info('\nPROD: errors will be caught and logged');
      process.on('uncaughtException', function(err) {
        return console.log('\nCaught the following exception:\n' + err);
      });
    } else {
      console.info('\nDEV: errors will NOT be caught');
    }
    return console.log('\n\n                  #####################\n                   H e a r d  -  A P I\n                  #####################\n');
  };


  /*
  load routes
   */

  routes = {
    'get': {
      '/': 'root',
      '/test': 'test',
      '/list': 'listAll'
    },
    'post': {
      '/create': 'createRequest'
    }
  };

  initRoutes = function() {
    return _.each(routes, function(value, key) {
      var verb;
      verb = key;
      return _.each(value, function(value, key) {
        return app[verb](key, routeHandlers[value]);
      });
    });
  };

  routeHandlers = {
    root: function(req, res) {
      console.log('\nOMG, a request!');
      console.info('request made for:\n' + req.url);
      return res.json({
        heardSays: 'Hello World!'
      });
    },
    test: function(req, res) {
      console.log('\nOMG, a request!');
      console.info('request made for:\n' + req.url);
      return res.json({
        heardSays: 'serving test!'
      });
    },
    listAll: function(req, res) {
      console.log('\nOMG, a request!');
      console.info('request made for:\n' + req.url);
      return db.get('requests', function(err, doc) {
        if (err) {
          res.json(err);
        }
        return res.json(doc);
      });
    },
    createRequest: function(req, res) {
      console.log('\nOMG, a request!');
      console.info('request made for:\n' + req.url);
      return db.save({
        type: 'request'
      }, function(err, doc) {
        if (err) {
          res.json(err);
        }
        return res.json(doc);
      });
    }
  };

  init();

}).call(this);
